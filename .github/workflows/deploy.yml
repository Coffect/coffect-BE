name: deploy-main

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat > ~/.ssh/config << EOF
          Host playground-umc-8th
            HostName ${{ secrets.EC2_HOST }}
            User ubuntu
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
            LogLevel ERROR
          EOF

      - name: Test SSH Connection
        run: ssh -vvv playground-umc-8th "echo '✅ SSH Connection Successful'"

      - name: Check for package.json changes
        id: check-package
        run: |
          CHANGED=$(git diff HEAD^1 --name-only | grep "package.json" || echo "")
          echo "changed=${CHANGED}" >> $GITHUB_OUTPUT

      - name: Get package-lock.json hash
        id: package-lock-hash
        run: |
          if ssh playground-umc-8th "test -f /home/ubuntu/coffect-BE/package-lock.json"; then
            REMOTE_HASH=$(ssh playground-umc-8th "md5sum /home/ubuntu/coffect-BE/package-lock.json | cut -d' ' -f1")
            LOCAL_HASH=$(md5sum package-lock.json | cut -d' ' -f1)
            if [ "$REMOTE_HASH" != "$LOCAL_HASH" ]; then
              echo "changed=true" >> $GITHUB_OUTPUT
            else
              echo "changed=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Sync Changed Files
        run: |
          ssh playground-umc-8th 'mkdir -p /home/ubuntu/coffect-BE'
          git diff --name-only HEAD^1 HEAD | while read file; do
            if [ -f "$file" ] || [ -d "$file" ]; then
              rsync -avzr --relative "$file" playground-umc-8th:/home/ubuntu/coffect-BE/
            fi
          done

      - name: Install Dependencies if needed
        if: steps.check-package.outputs.changed != '' || steps.package-lock-hash.outputs.changed == 'true'
        run: |
          ssh playground-umc-8th '
            cd /home/ubuntu/coffect-BE
            npm install
          '

      - name: Create or Update .env file
        run: |
          ssh playground-umc-8th "cat > /home/ubuntu/coffect-BE/.env << EOF
          DATABASE_NAME=${{ secrets.DATABASE_NAME }}
          DATABASE_HOST=${{ secrets.DATABASE_HOST }}
          DATABASE_PORT=${{ secrets.DATABASE_PORT }}
          DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
          
          EC2_PORT=${{ secrets.EC2_PORT }}
          EOF
          "

      # 🚨 디버깅을 위한 상세 환경 체크
      - name: Debug Environment Check
        run: |
          ssh playground-umc-8th '
            cd /home/ubuntu/coffect-BE
            echo "=========================================="
            echo "🔍 DEBUGGING ENVIRONMENT"
            echo "=========================================="
            
            echo "📁 Current directory:"
            pwd
            
            echo "📋 Directory contents:"
            ls -la
            
            echo "📦 package.json exists:"
            test -f package.json && echo "✅ YES" || echo "❌ NO"
            
            echo "🔧 package.json scripts section:"
            if [ -f package.json ]; then
              cat package.json | grep -A 20 "\"scripts\"" || echo "No scripts section found"
            fi
            
            echo "🌍 .env file exists:"
            test -f .env && echo "✅ YES" || echo "❌ NO"
            
            echo "🌍 .env contents (masked):"
            if [ -f .env ]; then
              sed "s/=.*/=***MASKED***/" .env
            fi
            
            echo "📁 node_modules exists:"
            test -d node_modules && echo "✅ YES" || echo "❌ NO"
            
            echo "🏗️ Build directory (dist/build) exists:"
            test -d dist && echo "✅ dist exists" || echo "❌ dist missing"
            test -d build && echo "✅ build exists" || echo "❌ build missing"
            
            echo "🚀 Node.js version:"
            node --version
            
            echo "📦 NPM version:"
            npm --version
            
            echo "🔍 Available npm scripts:"
            npm run 2>&1 | grep -A 50 "available via" || echo "Could not list scripts"
          '

      - name: Build on Server
        run: |
          ssh playground-umc-8th '
            cd /home/ubuntu/coffect-BE
            echo "🏗️ Starting build process..."
            npm run build
            echo "✅ Build completed"
            
            echo "📁 Post-build directory contents:"
            ls -la
          '

      - name: Stop Existing Application
        run: |
          ssh playground-umc-8th '
            cd /home/ubuntu/coffect-BE
            if [ -f app.pid ]; then
              PID=$(cat app.pid)
              if kill -0 $PID 2>/dev/null; then
                echo "Stopping existing application (PID: $PID)"
                kill $PID
                sleep 5
                if kill -0 $PID 2>/dev/null; then
                  kill -9 $PID
                fi
              fi
              rm -f app.pid
            fi
            
            # 포트 기반 정리
            if [ ! -z "${{ secrets.EC2_PORT }}" ]; then
              PID=$(lsof -ti:${{ secrets.EC2_PORT }} 2>/dev/null | head -1)
              if [ ! -z "$PID" ]; then
                echo "Stopping process on port ${{ secrets.EC2_PORT }} (PID: $PID)"
                kill $PID 2>/dev/null || true
                sleep 3
              fi
            fi
          '

      # 🚨 테스트용: 직접 실행해보기
      - name: Test Direct Execution
        run: |
          ssh playground-umc-8th '
            cd /home/ubuntu/coffect-BE
            echo "=========================================="
            echo "🧪 TESTING DIRECT EXECUTION"
            echo "=========================================="
            
            echo "📋 Testing npm run start directly (5초 제한):"
            timeout 5s npm run start || echo "Command terminated after 5 seconds or failed"
            
            echo "📋 Exit code: $?"
          '